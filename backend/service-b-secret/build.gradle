plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.flywaydb.flyway' version '10.5.0'
}

group = 'com.internos'
version = '1.0.0'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    
    // Database
    runtimeOnly 'org.postgresql:postgresql'
    
    // Flyway
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    
    // Google Cloud Storage
    implementation 'com.google.cloud:google-cloud-storage:2.28.1'
    
    // OpenAPI / Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    
    // Password Hashing
    implementation 'org.springframework.security:spring-security-crypto'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70'
    
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:redis'
    testImplementation 'com.google.cloud:google-cloud-storage:2.28.1'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Flyway configuration
flyway {
    url = System.getenv('DB_URL_B') ?: 'jdbc:postgresql://localhost:5432/secret'
    user = System.getenv('DB_USER') ?: 'postgres'
    password = System.getenv('DB_PASS') ?: 'postgres'
    locations = ['filesystem:src/main/resources/db/migration']
}

